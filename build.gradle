buildscript {
    ext {
        springBootVersion = '2.4.4'
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:6.1.0'
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id 'java'
    id 'application'
    id "nebula.lint" version "16.9.0"
    id 'org.springframework.boot' version '2.4.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "nebula.lint"
gradleLint {
    rules = ['unused-dependency']
}

//needed by shadowJar process
mainClassName = "toby.Application"
group = 'com.github.ml404'
version = '4.0-SNAPSHOT'

java.sourceCompatibility = JavaVersion.VERSION_15
java.targetCompatibility = JavaVersion.VERSION_15
compileJava { options.encoding = "UTF-8" }

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://jitpack.io' }
    maven { url "https://repo.spring.io/libs-snapshot" }
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
    maven {
        name 'm2-dv8tion'
        url 'https://m2.dv8tion.net/releases'
    }
}

configurations {
    compile.exclude module: "spring-boot-starter-tomcat"
}

dependencies {
    runtimeOnly 'org.junit.jupiter:junit-jupiter:5.4.2'

//    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile 'net.dv8tion:JDA:4.2.0_214'
    compile 'com.github.sedmelluq:lavaplayer:1.3.77'
    compile 'com.sedmelluq:lavaplayer-natives:1.3.14'
    runtime("org.hibernate:hibernate-core:5.4.30.Final")
    // https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api
    runtime 'ch.qos.logback:logback-classic:1.1.8'
    implementation group: 'com.jagrosh', name: 'jda-utilities', version: '3.0.4'
    implementation group: 'me.duncte123', name: 'botCommons', version: '1.0.45'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    // https://mvnrepository.com/artifact/org.postgresql/postgresql
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.19'
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-web-services')
    implementation('org.springframework.boot:spring-boot-starter-jetty')
    implementation('org.springframework.boot:spring-boot-starter-webflux')
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework.boot:spring-boot-autoconfigure')
    implementation('org.springframework:spring-jdbc')
    implementation('org.springframework:spring-orm')
    implementation('org.springframework:spring-context')
    // https://mvnrepository.com/artifact/javax.persistence/javax.persistence-api
    implementation 'javax.persistence:javax.persistence-api:2.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    testImplementation 'org.mockito:mockito-inline:3.7.7'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'

}

task stage {
    dependsOn build
    doLast {
        delete fileTree(dir: "build", exclude: "libs")
        delete fileTree(dir: "build/libs", exclude: "*.jar")
    }
    dependsOn clean
}
build.mustRunAfter clean

bootJar {
    launchScript()
}
test {
    useJUnitPlatform()
}
